name: BobApp CI/CD

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main

jobs:
  # Build and Test Backend
  build-backend:
    name: Backend - Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"

      - name: Build with Maven
        run: mvn -B package --file back/pom.xml

      - name: Test with Maven
        run: mvn -B test --file back/pom.xml

      - name: Generate JaCoCo Report
        run: mvn jacoco:report --file back/pom.xml

      - name: Upload backend coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco/

      - name: Upload compiled classes
        uses: actions/upload-artifact@v4
        with:
          name: backend-classes
          path: back/target/classes/

      - name: Upload jacoco exec
        uses: actions/upload-artifact@v4
        with:
          name: backend-jacoco-exec
          path: back/target/jacoco.exec

  # Build and Test Frontend
  build-frontend:
    name: Frontend - Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Use Node.js 14
        uses: actions/setup-node@v4
        with:
          node-version: "14"
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies
        run: |
          cd front
          npm ci

      - name: Run tests with coverage
        run: |
          cd front
          npm run test -- --no-watch --code-coverage --browsers=ChromeHeadless

      - name: Verify lcov.info exists
        run: |
          if [ -f front/coverage/bobapp/lcov.info ]; then
            echo "‚úÖ lcov.info trouv√© !"
            ls -lh front/coverage/bobapp/lcov.info
          else
            echo "‚ùå lcov.info NON trouv√© !"
            echo "Contenu de front/coverage/bobapp :"
            ls -la front/coverage/bobapp/
          fi

      - name: Upload frontend coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-coverage
          path: front/coverage/

  # SonarCloud - Backend
  sonarcloud-backend:
    name: SonarCloud Backend - Quality check
    needs: [build-backend]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"

      - name: Download backend coverage
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco/

      - name: Download backend compiled classes
        uses: actions/download-artifact@v4
        with:
          name: backend-classes
          path: back/target/classes/

      - name: Download jacoco exec
        uses: actions/download-artifact@v4
        with:
          name: backend-jacoco-exec
          path: back/target/

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud Scan with Maven
        run: |
          cd back
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=hisarandre_P10_bob-app_back \
            -Dsonar.organization=hisarandre \
            -Dsonar.host.url=https://sonarcloud.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACK }}

  # SonarCloud - Frontend
  sonarcloud-frontend:
    name: SonarCloud Frontend - Quality check
    needs: [build-frontend]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download frontend coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/

      - name: Verify lcov.info downloaded
        run: |
          echo "=== V√©rification de lcov.info apr√®s download ==="
          if [ -f front/coverage/bobapp/lcov.info ]; then
            echo "‚úÖ lcov.info pr√©sent !"
            ls -lh front/coverage/bobapp/lcov.info
          else
            echo "‚ùå lcov.info manquant !"
            ls -laR front/coverage/
          fi

      - name: SonarCloud Scan Frontend
        uses: SonarSource/sonarqube-scan-action@v6
        with:
          projectBaseDir: front/
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
          SONAR_HOST_URL: https://sonarcloud.io

  # Resume actions
  resume-success:
    name: Resume Success
    needs: [build-backend, build-frontend, sonarcloud-backend, sonarcloud-frontend]
    runs-on: ubuntu-latest

    steps:
      - name: All tests passed
        run: |
          echo "‚úÖ Backend: Build & Tests passed"
          echo "‚úÖ Frontend: Build & Tests passed"
          echo "‚úÖ Coverage reports generated"
          echo "‚úÖ SonarCloud analysis completed (Backend & Frontend)"
          echo "üéâ Pipeline completed successfully!"
