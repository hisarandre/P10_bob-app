name: BobApp CI/CD

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main
      - develop

jobs:
  # ================================
  # Backend - Build & Test
  # ================================
  build-backend:
    name: Backend - Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"

      - name: Build with Maven
        run: mvn -B package --file back/pom.xml

      - name: Test with Maven
        run: mvn -B test --file back/pom.xml

      - name: Generate JaCoCo Report
        run: mvn jacoco:report --file back/pom.xml

      - name: Upload backend data
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: |
            back/target/classes/
            back/target/jacoco.exec
            back/target/site/jacoco/

  # ================================
  # Frontend - Build & Test
  # ================================
  build-frontend:
    name: Frontend - Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Use Node.js 14
        uses: actions/setup-node@v4
        with:
          node-version: "14"
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies
        run: |
          cd front
          npm ci

      - name: Run tests with coverage
        run: |
          cd front
          npm run test -- --no-watch --code-coverage --browsers=ChromeHeadless

      - name: Upload frontend coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-coverage
          path: front/coverage/

  # ================================
  # Sonarcloud - Backend
  # ================================
  sonarcloud-backend:
    name: SonarCloud Backend - Quality check
    needs: [build-backend]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"

      - name: Download backend data
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: back/target/

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud Scan with Maven
        run: |
          cd back
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=hisarandre_P10_bob-app_back \
            -Dsonar.organization=hisarandre \
            -Dsonar.host.url=https://sonarcloud.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACK }}

  # ================================
  # Sonarcloud - Frontend
  # ================================
  sonarcloud-frontend:
    name: SonarCloud Frontend - Quality check
    needs: [build-frontend]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download frontend coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/

      - name: SonarCloud Scan Frontend
        uses: SonarSource/sonarqube-scan-action@v6
        with:
          projectBaseDir: front/
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
          SONAR_HOST_URL: https://sonarcloud.io

  # ================================
  # Docker - Build & Push
  # ================================
  push-docker:
    name: Docker Build & Push
    needs: [sonarcloud-backend, sonarcloud-frontend]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./back
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-back:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-back:${{ github.sha }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./front
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-front:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-front:${{ github.sha }}

  # ================================
  # Resume
  # ================================
  resume-success:
    name: Resume Success
    needs: [push-docker]
    runs-on: ubuntu-latest

    steps:
      - name: All tests passed
        run: |
          echo "âœ… Backend: Build & Tests passed"
          echo "âœ… Frontend: Build & Tests passed"
          echo "âœ… Coverage reports generated"
          echo "âœ… Quality check completed (Backend & Frontend)"
          echo "âœ… Docker images pushed to Docker Hub"
          echo "ðŸŽ‰ CI/CD Pipeline completed successfully!"
